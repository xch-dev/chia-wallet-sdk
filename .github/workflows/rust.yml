name: Rust
on:
  push:
    branches:
      - main
    tags:
      - "**"

  pull_request:
    branches:
      - "**"

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow_ref, github.event.pull_request.number) || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-workspaces
        run: cargo binstall cargo-workspaces --locked -y

      - name: Build individual crates
        run: |
          set -e
          cargo build --release
          cargo build --release --all-features
          cargo build --release -p chia-sdk-driver
          cargo build --release -p chia-sdk-driver --all-features
          cargo build --release -p chia-sdk-client
          cargo build --release -p chia-sdk-client --all-features
          cargo build --release -p chia-sdk-coinset
          cargo build --release -p chia-sdk-coinset --all-features
          cargo build --release -p chia-sdk-cli
          cargo build --release -p chia-sdk-signer
          cargo build --release -p chia-sdk-test
          cargo build --release -p chia-sdk-test --all-features
          cargo build --release -p chia-sdk-types
          cargo build --release -p chia-sdk-types --all-features
          cargo build --release -p chia-sdk-utils
          cargo build --release -p chia-sdk-bindings -F napi
          cargo build --release -p chia-sdk-bindings -F wasm
          cargo build --release -p chia-sdk-bindings -F pyo3

      - name: Run tests
        run: cargo test --release --workspace --exclude chia-wallet-sdk-napi --exclude chia-sdk-derive --exclude chia-wallet-sdk-py --exclude chia-wallet-sdk-wasm --exclude chia-sdk-bindings --exclude bindy --exclude bindy-macro --all-features

      - name: Clippy
        run: cargo clippy --workspace --all-features --all-targets

      - name: Unused dependencies
        run: |
          cargo binstall cargo-machete --locked -y
          cargo machete

      - name: Fmt
        run: cargo fmt --all -- --files-with-diff --check

      - uses: rust-lang/crates-io-auth-action@v1
        if: startsWith(github.event.ref, 'refs/tags')
        id: auth

      - name: Publish
        if: startsWith(github.event.ref, 'refs/tags')
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
        run: cargo ws publish --publish-as-is --allow-dirty
